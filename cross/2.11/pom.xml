<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.clifford</groupId>
    <artifactId>clifford</artifactId>
    <version>1.0.0</version>
    <relativePath>../..</relativePath>
  </parent>
  
  <groupId>org.clifford</groupId>
  <artifactId>clifford_2.11</artifactId>
  <version>${revision}</version>
  <packaging>jar</packaging>
  
  <description>Produce cross-scala version build for Scala 2.11.</description>
  
  <properties>
    <version.scala.epoch>2.11</version.scala.epoch>
    <version.scala.release>2.11.12</version.scala.release>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${version.junit4}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${version.scala.release}</version>
    </dependency>

    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${version.scala.epoch}</artifactId>
      <version>${version.scalatest}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.scala-lang</groupId>
          <artifactId>scala-reflect</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Scala Native dependencies -->
    <dependency>
      <groupId>org.scala-native</groupId>
      <artifactId>nativelib_${version.scalanat.library}</artifactId>
      <version>${version.scalanat.release}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.scala-native</groupId>
      <artifactId>javalib_${version.scalanat.library}</artifactId>
      <version>${version.scalanat.release}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.scala-native</groupId>
      <artifactId>scalalib_${version.scalanat.library}</artifactId>
      <version>${version.scalanat.release}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.scala-lang</groupId>
          <artifactId>scala-reflect</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.scala-lang</groupId>
          <artifactId>scala-library</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.scala-native</groupId>
      <artifactId>auxlib_${version.scalanat.library}</artifactId>
      <version>${version.scalanat.release}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.scalanlp</groupId>
      <artifactId>breeze-natives_2.11</artifactId>
      <version>0.13.2</version>
    </dependency>

    <!-- Scala-JS dependencies -->
    <dependency>
      <groupId>org.scala-js</groupId>
      <artifactId>scalajs-library_${version.scala.epoch}</artifactId>
      <version>${version.scalajs.release}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.scala-js</groupId>
      <artifactId>scalajs-junit-test-runtime_${version.scala.epoch}</artifactId>
      <version>${version.scalajs.release}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scala-js</groupId>
      <artifactId>scalajs-junit-test-plugin_${version.scala.release}</artifactId>
      <version>${version.scalajs.release}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.scala-lang</groupId>
          <artifactId>scala-reflect</artifactId>
        </exclusion>
      </exclusions> 
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>webjars-locator-core</artifactId>
      <version>0.37</version>
      <scope>test</scope>
    </dependency>

    <!-- Native JS. -->
    
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>jquery</artifactId>
      <version>3.3.1</version>
      <scope>test</scope>
    </dependency>
    
    <!-- Scala.js facade. -->
    
    <dependency>
      <groupId>be.doeraene</groupId>
      <artifactId>scalajs-jquery_${version.scalajs.library}</artifactId>
      <version>0.9.2</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>org.scala-js</groupId>
      <artifactId>scalajs-dom_${version.scalajs.library}</artifactId>
      <version>0.9.4</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Provision Phantom.js -->
      <plugin>
        <groupId>com.github.klieber</groupId>
        <artifactId>phantomjs-maven-plugin</artifactId>
        <version>0.7</version>
        <configuration>
        </configuration>
        <executions>
          <execution>
            <id>install-phantom</id>
            <phase>validate</phase>
            <goals>
              <goal>install</goal>
            </goals>
            <configuration>
              <version>2.1.1</version>
              <propertyName>phantomjs.binary</propertyName>
              <outputDirectory>${test-tool.phantom.dir}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <!-- Provision Phantom.js -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>install-phantom</id>
            <phase>validate</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target name="install-phantom">
                <mkdir dir="${test-tool.phantom.dir}" />
                <copy file="${phantomjs.binary}" tofile="${test-tool.phantom.exec}" />
                <chmod file="${test-tool.phantom.exec}" perm="u+rx" />
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Enable alternative compiler. -->
      <plugin>
        <groupId>com.carrotgarden.maven</groupId>
        <artifactId>scalor-maven-plugin_2.12</artifactId>
	<version>1.4.2.20180508161326</version>

        <configuration>
          <defineCompiler>
            <dependency>
              <groupId>org.scala-lang</groupId>
              <artifactId>scala-compiler</artifactId>
              <version>${version.scala.release}</version>
            </dependency>
	    <!--
                Convert JUnit annotations into Scala.js JUnit meta data.
                This dependency provides replacement JUnit *.sjsir classes.
            -->
            <dependency>
              <groupId>org.scala-js</groupId>
              <artifactId>scalajs-junit-test-runtime_${version.scala.epoch}</artifactId>
              <version>${version.scalajs.release}</version>
            </dependency>
          </defineCompiler>

          <nativeLogBuildStats>true</nativeLogBuildStats>
          <nativeLogBuildTimes>true</nativeLogBuildTimes>
<!--	  <nativeLogClassPath>true</nativeLogClassPath>
	  <nativeLogOptions>true</nativeLogOptions>
	  <nativeLogRuntime>true</nativeLogRuntime> -->
	  
	  <zincOptionsScala>
            -Xsource:${version.scala.epoch}
            -withVersionClasspathValidator:false
            -compileorder:Mixed
	    -language:implicitConversions
	    -usejavacp
          </zincOptionsScala>

          <definePluginList>
            <!-- Support for macro type provider. -->
            <dependency>
              <groupId>org.scalamacros</groupId>
              <artifactId>paradise_${version.scala.release}</artifactId>
              <version>${version.scala.plugin.macro}</version>
            </dependency>
            <!-- Generate Scala.native *.nir classes. -->
            <dependency>
              <groupId>org.scala-native</groupId>
              <artifactId>nscplugin_${version.scala.release}</artifactId>
              <version>${version.scalanat.release}</version>
            </dependency>

	    <!--
                Generate Scala.js *.sjsir classes.
            -->
            <dependency>
              <groupId>org.scala-js</groupId>
              <artifactId>scalajs-compiler_${version.scala.release}</artifactId>
              <version>${version.scalajs.release}</version>
            </dependency>
            <!--
                Convert JUnit annotations into Scala.js JUnit meta data.
                This plugin does actual conversion of JUnit test classes for JS-VM.
            -->
            <dependency>
              <groupId>org.scala-js</groupId>
              <artifactId>scalajs-junit-test-plugin_${version.scala.release}</artifactId>
              <version>${version.scalajs.release}</version>
            </dependency>
          </definePluginList>
        </configuration>
        <executions>
          <execution>
	    <id>scala-build</id>
            <goals>
	      
              <!-- Enable eclipse for manual project testing. -->
              <!-- <goal>eclipse-config</goal> -->
	      
              <goal>register-macro</goal>
              <goal>register-main</goal>
              <goal>register-test</goal>
	      
              <goal>compile-macro</goal>
              <goal>compile-main</goal>
              <goal>compile-test</goal>
	      <!-- this works now, so uncomment if you have clang setup -->
              <!-- <goal>scala-native-link-test</goal>	      
              <goal>scala-native-pack-test</goal> -->

	      <!-- scala-js -->
	      <goal>scala-js-link-main</goal>
              <goal>scala-js-link-test</goal>

              <goal>scala-js-env-prov-webjars</goal>
              <goal>scala-js-env-prov-nodejs</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${version.maven.testing}</version>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.surefire</groupId>
            <artifactId>surefire-junit47</artifactId>
            <version>${version.maven.testing}</version>
          </dependency>
        </dependencies>
        <configuration>
          <skipTests>false</skipTests>
          <reportsDirectory>${project.build.directory}/js-surefire-reports</reportsDirectory>
	  <test>${suite.name}</test>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
